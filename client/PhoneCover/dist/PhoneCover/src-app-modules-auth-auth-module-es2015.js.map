{"version":3,"sources":["./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/pages/forgot-password/forgot-password.component.ts","./src/app/modules/auth/pages/forgot-password/forgot-password.component.html","./src/app/modules/auth/pages/login/login.component.ts","./src/app/modules/auth/pages/login/login.component.html","./src/app/modules/auth/pages/profile/profile.component.ts","./src/app/modules/auth/pages/profile/profile.component.html","./src/app/modules/auth/pages/register/register.component.ts","./src/app/modules/auth/pages/register/register.component.html"],"names":[],"mappings":"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","file":"src-app-modules-auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { AuthGuard } from 'src/app/core/guard/auth.guard';\nimport { UserResolver } from 'src/app/core/services/user.resolver';\nimport { ForgotPasswordComponent } from './pages/forgot-password/forgot-password.component';\n\n\n\nconst routes: Routes = [\n  {path: '' , component: LoginComponent, pathMatch : 'full'},\n  {path: 'login' , component: LoginComponent},\n  {path: 'register' , component: RegisterComponent},\n  {path: 'forgot-password' , component: ForgotPasswordComponent},\n  {path: 'profile' , component: ProfileComponent, resolve: {data:UserResolver}},\n \n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UserResolver } from 'src/app/core/services/user.resolver';\nimport { ForgotPasswordComponent } from './pages/forgot-password/forgot-password.component';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, ProfileComponent, RegisterComponent, ForgotPasswordComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n  ],\n  providers: [UserResolver]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/core/services/user.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  resetStatus:string ='';\n\n  constructor(public authService: AuthService,\n    private fb: FormBuilder,\n    private userService:UserService) {   \n       this.createForm();\n      }\n\n      forgotPasswordForm: FormGroup;\n    errorMessage: string = '';\n    successMessage: string = '';\n\n\n\n createForm() {\n     this.forgotPasswordForm = this.fb.group({\n       email: [''],\n     });\n   }\n\n\n  resetPassword(email){\n    console.log(email)\n    this.userService.resetPassword(email).then(res => {\n      this.resetStatus = \"A mail with reset password instructions was sent to your email!\";\n    }, err => {\n      this.resetStatus = err;\n    })\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div style=\"text-align: center;\">\n<h1 class=\"header\">New Password</h1>\n\n<div class=\"container\" style=\"text-align: center;\" >\n  <div class=\"row\">\n    <div class=\"col-md-6 col-md-offset-3\">\n     \n      <form  #f=\"ngForm\" [formGroup]=\"forgotPasswordForm\" style=\"margin-right: auto;margin-left: auto;\" >\n       \n        <div class=\"form-group\" >\n            <label>Email address</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required>\n            <p class=\"errorText\" style=\"color: red;\" *ngIf=\"!forgotPasswordForm.controls.email.valid && forgotPasswordForm.controls.email.touched\">\n              Email is required\n            </p>\n          </div>\n         \n          <p>{{resetStatus}}</p>\n       \n          <button type=\"submit\" [disabled]=\"!f.valid\" (click)=\"resetPassword(forgotPasswordForm.value.email)\" class=\"btn btn-info\">Reset Password</button>\n     \n        </form>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"col-md-4 col-md-offset-4\">\n      <p>Go back to - <a [routerLink]=\"['/auth/login']\">Login</a></p>\n    </div>\n  </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { UserService } from 'src/app/core/services/user.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router:Router, private userService:UserService,\n    private fb:FormBuilder) {\n    this.createForm();\n\n    }\n    loginForm: FormGroup;\n    errorMessage: string = '';\n    resetStatus:string = '';\n    createForm() {\n      this.loginForm = this.fb.group({\n        email: [''],\n        password: ['',Validators.required]\n      });\n    }\n\n \n  tryFacebookLogin(){\n    this.authService.facebookLogin()\n    .then(res => {\n      this.userService.checkIfUserHasRole(res.user)\n      \n    })\n  }\n\n\n  tryGoogleLogin(){\n    this.authService.googleLogin()\n    .then(res => {\n      this.userService.checkIfUserHasRole(res.user)\n      \n    })\n  }\n\n  tryLogin(value){\n    this.authService.login(value)\n    .then(res => {\n      this.userService.checkIfUserHasRole(res.user)\n      \n    }, err => {\n      console.log(err);\n      this.errorMessage = err.message;\n    })\n  }\n\n  ngOnInit(): void {\n  }\n}","<h1 class=\"header\">Login as Admin</h1>\n<div class=\"container\">\n  <div>\n    <div>\n      <form #f=\"ngForm\" [formGroup]=\"loginForm\" id=\"loginForm\">\n        <div class=\"form-group\">\n          <label>Email address</label>\n          <input type=\"email\" formControlName=\"email\" class=\"form-control\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required>\n          <p class=\"errorText\" *ngIf=\"!loginForm.controls.email.valid && loginForm.controls.email.touched\">\n            Email is required\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <label>Password</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"password\" >\n          <p class=\"errorText\" *ngIf=\"!loginForm.controls.password.valid && loginForm.controls.password.touched\">\n            Password is required\n          </p>\n          <label class=\"error\">{{errorMessage}}</label>\n          <label *ngIf=\"errorMessage\">Forgot your password? <a [routerLink]=\"['/auth/forgot-password']\">Reset password</a></label>\n\n        </div>\n        <button type=\"submit\" [disabled]=\"!f.valid\" (click)=\"tryLogin(loginForm.value)\" class=\"btn btn-info\">Login</button>\n      </form>\n    </div>\n  </div>\n  <div id=\"socialButton\">\n  <div>\n    <div>\n      <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"tryFacebookLogin()\"><i class=\"fab fa-facebook-f\"></i> Login with Facebook</button>\n    </div>\n  </div>\n  <div>\n    <div>\n      <button type=\"button\" class=\"btn btn-danger btn-block\" (click)=\"tryGoogleLogin()\"><i class=\"fab fa-google\"></i> Login with Google</button>\n    </div>\n  </div>\n  <div>\n    <div>\n      <p style=\"margin-top: 10px ;\">No account yet? <a [routerLink]=\"['/auth/register']\">Create an account</a></p>\n    </div>\n  </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/core/models/user';\nimport { UserService } from 'src/app/core/services/user.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: User = new User();\n  profileForm: FormGroup;\n\n  constructor(    public userService: UserService,\n    public authService: AuthService,\n    private route: ActivatedRoute,\n    private location : Location,\n    private fb: FormBuilder) { }\n\n\n  createForm(name, photoURL) {\n    this.profileForm = this.fb.group({\n      name: [name, Validators.required ],\n      photoURL: [photoURL, Validators.required ]\n    });\n  }\n\n  save(value){\n    this.userService.updateCurrentUser(value)\n    .then(res => {\n      console.log(res);\n    }, err => console.log(err))\n\n    this.user.image = value.photoURL;\n  }\n\n  logout(){\n    this.authService.logout()\n    .then((res) => {\n      this.location.back();\n    }, (error) => {\n      console.log(\"Logout error\", error);\n    });\n  }\n  ngOnInit(): void {\n    this.route.data.subscribe(routeData => {\n      let data = routeData['data'];\n      if (data) {\n        this.user = data;\n        this.createForm(this.user.name, this.user.image);\n      }\n    })\n  }\n}","\n<nav class=\"navbar navbar-default navbar-static-top navbar-inverse\">\n    <div class=\"container\">\n      <a (click)=\"logout()\" class=\"navbar-text navbar-right navbar-link\">Admin Logout</a>\n    </div>\n  </nav>\n  <h1 class=\"header\">Name and Photo</h1>\n  <div>\n    <div>\n      <div class=\"card\" style=\"width: 20rem;\">\n        <img class=\"card-img-top image\" [src]=\"user.image\" *ngIf=\"user.image\" alt=\"User image\">\n        <img class=\"card-img-top image\" src=\"https://via.placeholder.com/400x300\" *ngIf=\"!user.image\" alt=\"User image\">\n        <div *ngIf='user.provider != \"password\"'class=\"card-body\">\n          <h4 class=\"card-title\">{{user.name}}</h4>\n        </div>\n        <div *ngIf='user.provider == \"password\"'class=\"card-body\">\n          <form [formGroup]=\"profileForm\">\n            <div class=\"form-group\">\n                <label>Your name</label>\n                <input type=\"text\" formControlName=\"name\" class=\"form-control\" required>\n              </div>\n              <div class=\"form-group\">\n                <label>Photo URL</label>\n                <input type=\"text\" formControlName=\"photoURL\" class=\"form-control\" required>\n              </div>\n          </form>\n          <button (click)=\"save(profileForm.value)\" id=\"saveButton\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { UserService } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(public authService: AuthService,\n    private router: Router,\n    private userService:UserService,\n    private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  registerForm: FormGroup;\n  errorMessage: string = '';\n  successMessage: string = '';\n\n\n  ngOnInit(): void {\n  }\n  createForm() {\n    this.registerForm = this.fb.group({\n      email: ['',],\n      password: ['', Validators.required]\n    });\n  }\n\n\n  tryRegister(value) {\n    this.authService.register(value)\n      .then(res => {\n        console.log(res);\n        this.errorMessage = \"\";\n        this.successMessage = \"Your account has been created\";\n\n        setTimeout(() => {\n           this.router.navigate(['auth']);\n        }, 1500);\n      }, err => {\n        console.log(err);\n        this.errorMessage = err.message;\n        this.successMessage = \"\";\n      })\n  }\n\n}","<div id=\"creatAccount\">\n<h1 class=\"header\">Create an account</h1>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"form\">\n      <form #f=\"ngForm\" [formGroup]=\"registerForm\" id=\"form\">\n        <div class=\"form-group\">\n            <label>Email address*</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required>\n            <p class=\"errorText\" *ngIf=\"!registerForm.controls.email.valid && registerForm.controls.email.touched\">\n              Email is required\n            </p>\n          </div>\n        <div class=\"form-group\">\n          <label>Password*</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n          <p class=\"errorText\" *ngIf=\"!registerForm.controls.password.valid && registerForm.controls.password.touched\">\n            Password is required\n          </p>\n          <label class=\"error\">{{errorMessage}}</label>\n          <label class=\"success\">{{successMessage}}</label>\n        </div>\n        <button type=\"submit\" [disabled]=\"!f.valid\" (click)=\"tryRegister(registerForm.value)\" class=\"btn btn-info\">Register</button>\n      </form>\n    </div>\n  </div>\n  <div>\n    <div>\n      <p style=\"margin-top: 10px;\">Already have an account? <a [routerLink]=\"['/auth/login']\">Login</a></p>\n    </div>\n  </div>\n</div>\n</div>"],"sourceRoot":"webpack:///"}