{"version":3,"sources":["webpack:///src/app/modules/auth/auth-routing.module.ts","webpack:///src/app/modules/auth/auth.module.ts","webpack:///src/app/modules/auth/pages/forgot-password/forgot-password.component.ts","webpack:///src/app/modules/auth/pages/forgot-password/forgot-password.component.html","webpack:///src/app/modules/auth/pages/login/login.component.ts","webpack:///src/app/modules/auth/pages/login/login.component.html","webpack:///src/app/modules/auth/pages/profile/profile.component.ts","webpack:///src/app/modules/auth/pages/profile/profile.component.html","webpack:///src/app/modules/auth/pages/register/register.component.ts","webpack:///src/app/modules/auth/pages/register/register.component.html"],"names":["routes","path","component","pathMatch","resolve","data","AuthRoutingModule","forChild","imports","exports","AuthModule","declarations","providers","ForgotPasswordComponent","authService","fb","userService","resetStatus","errorMessage","successMessage","createForm","forgotPasswordForm","group","email","console","log","resetPassword","then","res","err","selector","templateUrl","styleUrls","LoginComponent","router","loginForm","password","required","facebookLogin","checkIfUserHasRole","user","googleLogin","value","login","message","tryLogin","tryFacebookLogin","tryGoogleLogin","ProfileComponent","route","location","name","photoURL","profileForm","updateCurrentUser","image","logout","back","error","subscribe","routeData","RegisterComponent","registerForm","register","setTimeout","navigate","tryRegister"],"mappings":"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","file":"src-app-modules-auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { AuthGuard } from 'src/app/core/guard/auth.guard';\nimport { UserResolver } from 'src/app/core/services/user.resolver';\nimport { ForgotPasswordComponent } from './pages/forgot-password/forgot-password.component';\n\n\n\nconst routes: Routes = [\n  {path: '' , component: LoginComponent, pathMatch : 'full'},\n  {path: 'login' , component: LoginComponent},\n  {path: 'register' , component: RegisterComponent},\n  {path: 'forgot-password' , component: ForgotPasswordComponent},\n  {path: 'profile' , component: ProfileComponent, resolve: {data:UserResolver}},\n \n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UserResolver } from 'src/app/core/services/user.resolver';\nimport { ForgotPasswordComponent } from './pages/forgot-password/forgot-password.component';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, ProfileComponent, RegisterComponent, ForgotPasswordComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n  ],\n  providers: [UserResolver]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/core/services/user.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  resetStatus:string ='';\n\n  constructor(public authService: AuthService,\n    private fb: FormBuilder,\n    private userService:UserService) {   \n       this.createForm();\n      }\n\n      forgotPasswordForm: FormGroup;\n    errorMessage: string = '';\n    successMessage: string = '';\n\n\n\n createForm() {\n     this.forgotPasswordForm = this.fb.group({\n       email: [''],\n     });\n   }\n\n\n  resetPassword(email){\n    console.log(email)\n    this.userService.resetPassword(email).then(res => {\n      this.resetStatus = \"A mail with reset password instructions was sent to your email!\";\n    }, err => {\n      this.resetStatus = err;\n    })\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div style=\"text-align: center;\">\n<h1 class=\"header\">New Password</h1>\n\n<div class=\"container\" style=\"text-align: center;\" >\n  <div class=\"row\">\n    <div class=\"col-md-6 col-md-offset-3\">\n     \n      <form  #f=\"ngForm\" [formGroup]=\"forgotPasswordForm\" style=\"margin-right: auto;margin-left: auto;\" >\n       \n        <div class=\"form-group\" >\n            <label>Email address</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required>\n            <p class=\"errorText\" style=\"color: red;\" *ngIf=\"!forgotPasswordForm.controls.email.valid && forgotPasswordForm.controls.email.touched\">\n              Email is required\n            </p>\n          </div>\n         \n          <p>{{resetStatus}}</p>\n       \n          <button type=\"submit\" [disabled]=\"!f.valid\" (click)=\"resetPassword(forgotPasswordForm.value.email)\" class=\"btn btn-info\">Reset Password</button>\n     \n        </form>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"col-md-4 col-md-offset-4\">\n      <p>Go back to - <a [routerLink]=\"['/auth/login']\">Login</a></p>\n    </div>\n  </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { UserService } from 'src/app/core/services/user.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router:Router, private userService:UserService,\n    private fb:FormBuilder) {\n    this.createForm();\n\n    }\n    loginForm: FormGroup;\n    errorMessage: string = '';\n    resetStatus:string = '';\n    createForm() {\n      this.loginForm = this.fb.group({\n        email: [''],\n        password: ['',Validators.required]\n      });\n    }\n\n \n  tryFacebookLogin(){\n    this.authService.facebookLogin()\n    .then(res => {\n      this.userService.checkIfUserHasRole(res.user)\n      \n    })\n  }\n\n\n  tryGoogleLogin(){\n    this.authService.googleLogin()\n    .then(res => {\n      this.userService.checkIfUserHasRole(res.user)\n      \n    })\n  }\n\n  tryLogin(value){\n    this.authService.login(value)\n    .then(res => {\n      this.userService.checkIfUserHasRole(res.user)\n      \n    }, err => {\n      console.log(err);\n      this.errorMessage = err.message;\n    })\n  }\n\n  ngOnInit(): void {\n  }\n}","<h1 class=\"header\">Login as Admin</h1>\n<div class=\"container\">\n  <div>\n    <div>\n      <form #f=\"ngForm\" [formGroup]=\"loginForm\" id=\"loginForm\">\n        <div class=\"form-group\">\n          <label>Email address</label>\n          <input type=\"email\" formControlName=\"email\" class=\"form-control\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required>\n          <p class=\"errorText\" *ngIf=\"!loginForm.controls.email.valid && loginForm.controls.email.touched\">\n            Email is required\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <label>Password</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"password\" >\n          <p class=\"errorText\" *ngIf=\"!loginForm.controls.password.valid && loginForm.controls.password.touched\">\n            Password is required\n          </p>\n          <label class=\"error\">{{errorMessage}}</label>\n          <label *ngIf=\"errorMessage\">Forgot your password? <a [routerLink]=\"['/auth/forgot-password']\">Reset password</a></label>\n\n        </div>\n        <button type=\"submit\" [disabled]=\"!f.valid\" (click)=\"tryLogin(loginForm.value)\" class=\"btn btn-info\">Login</button>\n      </form>\n    </div>\n  </div>\n  <div id=\"socialButton\">\n  <div>\n    <div>\n      <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"tryFacebookLogin()\"><i class=\"fab fa-facebook-f\"></i> Login with Facebook</button>\n    </div>\n  </div>\n  <div>\n    <div>\n      <button type=\"button\" class=\"btn btn-danger btn-block\" (click)=\"tryGoogleLogin()\"><i class=\"fab fa-google\"></i> Login with Google</button>\n    </div>\n  </div>\n  <div>\n    <div>\n      <p style=\"margin-top: 10px ;\">No account yet? <a [routerLink]=\"['/auth/register']\">Create an account</a></p>\n    </div>\n  </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/core/models/user';\nimport { UserService } from 'src/app/core/services/user.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: User = new User();\n  profileForm: FormGroup;\n\n  constructor(    public userService: UserService,\n    public authService: AuthService,\n    private route: ActivatedRoute,\n    private location : Location,\n    private fb: FormBuilder) { }\n\n\n  createForm(name, photoURL) {\n    this.profileForm = this.fb.group({\n      name: [name, Validators.required ],\n      photoURL: [photoURL, Validators.required ]\n    });\n  }\n\n  save(value){\n    this.userService.updateCurrentUser(value)\n    .then(res => {\n      console.log(res);\n    }, err => console.log(err))\n\n    this.user.image = value.photoURL;\n  }\n\n  logout(){\n    this.authService.logout()\n    .then((res) => {\n      this.location.back();\n    }, (error) => {\n      console.log(\"Logout error\", error);\n    });\n  }\n  ngOnInit(): void {\n    this.route.data.subscribe(routeData => {\n      let data = routeData['data'];\n      if (data) {\n        this.user = data;\n        this.createForm(this.user.name, this.user.image);\n      }\n    })\n  }\n}","\n<nav class=\"navbar navbar-default navbar-static-top navbar-inverse\">\n    <div class=\"container\">\n      <a (click)=\"logout()\" class=\"navbar-text navbar-right navbar-link\">Admin Logout</a>\n    </div>\n  </nav>\n  <h1 class=\"header\">Name and Photo</h1>\n  <div>\n    <div>\n      <div class=\"card\" style=\"width: 20rem;\">\n        <img class=\"card-img-top image\" [src]=\"user.image\" *ngIf=\"user.image\" alt=\"User image\">\n        <img class=\"card-img-top image\" src=\"https://via.placeholder.com/400x300\" *ngIf=\"!user.image\" alt=\"User image\">\n        <div *ngIf='user.provider != \"password\"'class=\"card-body\">\n          <h4 class=\"card-title\">{{user.name}}</h4>\n        </div>\n        <div *ngIf='user.provider == \"password\"'class=\"card-body\">\n          <form [formGroup]=\"profileForm\">\n            <div class=\"form-group\">\n                <label>Your name</label>\n                <input type=\"text\" formControlName=\"name\" class=\"form-control\" required>\n              </div>\n              <div class=\"form-group\">\n                <label>Photo URL</label>\n                <input type=\"text\" formControlName=\"photoURL\" class=\"form-control\" required>\n              </div>\n          </form>\n          <button (click)=\"save(profileForm.value)\" id=\"saveButton\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { UserService } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(public authService: AuthService,\n    private router: Router,\n    private userService:UserService,\n    private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  registerForm: FormGroup;\n  errorMessage: string = '';\n  successMessage: string = '';\n\n\n  ngOnInit(): void {\n  }\n  createForm() {\n    this.registerForm = this.fb.group({\n      email: ['',],\n      password: ['', Validators.required]\n    });\n  }\n\n\n  tryRegister(value) {\n    this.authService.register(value)\n      .then(res => {\n        console.log(res);\n        this.errorMessage = \"\";\n        this.successMessage = \"Your account has been created\";\n\n        setTimeout(() => {\n           this.router.navigate(['auth']);\n        }, 1500);\n      }, err => {\n        console.log(err);\n        this.errorMessage = err.message;\n        this.successMessage = \"\";\n      })\n  }\n\n}","<div id=\"creatAccount\">\n<h1 class=\"header\">Create an account</h1>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"form\">\n      <form #f=\"ngForm\" [formGroup]=\"registerForm\" id=\"form\">\n        <div class=\"form-group\">\n            <label>Email address*</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required>\n            <p class=\"errorText\" *ngIf=\"!registerForm.controls.email.valid && registerForm.controls.email.touched\">\n              Email is required\n            </p>\n          </div>\n        <div class=\"form-group\">\n          <label>Password*</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n          <p class=\"errorText\" *ngIf=\"!registerForm.controls.password.valid && registerForm.controls.password.touched\">\n            Password is required\n          </p>\n          <label class=\"error\">{{errorMessage}}</label>\n          <label class=\"success\">{{successMessage}}</label>\n        </div>\n        <button type=\"submit\" [disabled]=\"!f.valid\" (click)=\"tryRegister(registerForm.value)\" class=\"btn btn-info\">Register</button>\n      </form>\n    </div>\n  </div>\n  <div>\n    <div>\n      <p style=\"margin-top: 10px;\">Already have an account? <a [routerLink]=\"['/auth/login']\">Login</a></p>\n    </div>\n  </div>\n</div>\n</div>"]}